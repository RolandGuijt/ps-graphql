@page "/ProductDetail/{productId:int}"

<UseGetProduct Context="result" ProductId="@ProductId">
    <ChildContent>
        @{
            var product = result.Product!;
            var addReviewLink = $"AddReview/{product.Id}";
        }
        <div class="row">
            <div class="col-3">
                <img height="150" src="/Images/@product.PhotoFileName" alt="Product image" />
            </div>
            <div class="col-9">
                <div class="row">
                    <div class="col-12">
                        <h3>@product.Name</h3>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-12">
                        @product.Description
                    </div>
                </div>
                <div class="row mb-4">
                    <div class="col-3">
                        In store since: @product.IntroducedAt.Year
                    </div>
                    <div class="col-3">
                        Stock: @product.Stock
                    </div>
                    <div class="col-3">
                        Stars: @product.Rating
                    </div>
                    <div class="col-3">
                        Price: $@product.Price
                    </div>
                </div>
                <h6>Reviews:</h6>
                <ul></ul>
                @foreach (var review in product.ProductReviews!)
                {
                    <div class="row">
                        <div class="col-12"><h5>@review!.Title</h5></div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-12">@review.Review</div>
                    </div>
                }
                <div id="reviews"></div>
                <ul></ul>
                <NavLink href="@addReviewLink">Add a review</NavLink>
            </div>
        </div>
    </ChildContent>
    <ErrorContent>
        Something went wrong ...<br />
        @result.First().Message
    </ErrorContent>
    <LoadingContent>
        Loading ...
    </LoadingContent>
</UseGetProduct>

@code {
    [Parameter]
    public int ProductId { get; set; }

    [Inject] ICarvedRockClient Client { get; set; }

    protected override void OnInitialized()
    {
        Client.OnReviewAdded.Watch().Subscribe(result =>
        {
            Console.WriteLine("Review added");
        });
    }
}